

ok
    todo rename numIndices -> numFaces?
    THERES SOMETHING WRONG WITH ALL THESE FUCKING MATRICES BLENDER IS GIVING ME
        
    get attribute flats (use_indices, use_edges, use_colors, ...)
    COPY ALL NAMES AND NAME LENGTHS TO INTERNAL DATA STRUCTURES...
        for debug purposes
        USE NULL TERMINATING STRINGS? (CONVERT AFTER READ BINARY)
    export camera pos from blend?
    

make mech rotate

need a quaternion lerp        


exporter
    endianness might be wrong?
    compression!
        lzw

experiment
    round floats to look like PS1 floating point precision errors
    
learning
    how do they do reading of binary files in other C libraries?
    do error handling properly and more specific error messages
    tests?
    anything to learn by looking at disassembly?
    probably use OpenGLES
    https://www.khronos.org/opengl/wiki/Vertex_Specification_Best_Practices
    https://www.khronos.org/opengl/wiki/Normalized_Integer
    
    
int getShaderSource(char path[], GLint *shaderLen, char * shaderSource) {
    FILE * file = fopen(path, "r");
    if (!file) {
        printf("ERROR cannot open shader file!\n");
        return 0;
    }
    
    // not platform independent?
    fseek(file, 0, SEEK_END);
    *shaderLen = ftell(file);
    fseek(file, 0, SEEK_SET);
    
    shaderSource = malloc(*shaderLen);
    if (!shaderSource) {
        printf("ERROR memory allocation failed!\n");
        return 0;
    }
    
    // todo read in chunks?
    int idx = 0;
    while ((shaderSource[idx] = getc(file)) != EOF)
        ++idx;
    
    fclose(file);
    
    return 1;
}

...

GLint vsLen = 0;
GLint fsLen = 0;
char * vsSource;
char * fsSource;
if (!getShaderSource("../shaders/default.vert", &vsLen, vsSource)) {
    printf("ERROR cannot get vertex shader source\n");
    return 0;
}
if (!getShaderSource("../shaders/default.frag", &fsLen, fsSource)) {
    printf("ERROR cannot get fragment shader source\n");
    return 0;
}