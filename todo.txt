

todo
    do 'face colors' for fun
        when export, duplicate every vertex for every face
        export vertex colors
        don't use indexing

    there's something wrong with the directional lighting
        NormalMatrix? normals?

    get attribute flags (use_indices, use_edges, use_colors, ...)
    do error handling properly and more specific error messages
    COPY ALL NAMES AND NAME LENGTHS TO INTERNAL DATA STRUCTURES...
        for debug purposes
        USE NULL TERMINATING STRINGS? (CONVERT AFTER READ BINARY)
        
    export camera pos from blend?
    compress .3d
        lzw?
        
    lerp between animation poses
        need a quaternion lerp
    sound effect
        
    how do they do reading of binary files in other C libraries?
    tests?
    anything to learn by looking at disassembly?
    probably use OpenGLES
    https://www.khronos.org/opengl/wiki/Vertex_Specification_Best_Practices
    https://www.khronos.org/opengl/wiki/Normalized_Integer







    
    
    
    
int getShaderSource(char path[], GLint *shaderLen, char * shaderSource) {
    FILE * file = fopen(path, "r");
    if (!file) {
        printf("ERROR cannot open shader file!\n");
        return 0;
    }
    
    // not platform independent?
    fseek(file, 0, SEEK_END);
    *shaderLen = ftell(file);
    fseek(file, 0, SEEK_SET);
    
    shaderSource = malloc(*shaderLen);
    if (!shaderSource) {
        printf("ERROR memory allocation failed!\n");
        return 0;
    }
    
    // todo read in chunks?
    int idx = 0;
    while ((shaderSource[idx] = getc(file)) != EOF)
        ++idx;
    
    fclose(file);
    
    return 1;
}

...

GLint vsLen = 0;
GLint fsLen = 0;
char * vsSource;
char * fsSource;
if (!getShaderSource("../shaders/default.vert", &vsLen, vsSource)) {
    printf("ERROR cannot get vertex shader source\n");
    return 0;
}
if (!getShaderSource("../shaders/default.frag", &fsLen, fsSource)) {
    printf("ERROR cannot get fragment shader source\n");
    return 0;
}